digraph G {
  node1 [label="intx;x:=10;print(x);if(x>5){print(esmayorque5;}else{print(esmenoroiguala5;}for(x:=1;x<10;x:=x+1){print(x);}<missing '}'>"];
  node0 -> node1;
  node2 [label="intx;x:=10;print(x);if(x>5){print(esmayorque5;}else{print(esmenoroiguala5;}for(x:=1;x<10;x:=x+1){print(x);}<missing '}'>"];
  node1 -> node2;
  node3 [label="intx"];
  node2 -> node3;
  node4 [label="intx"];
  node3 -> node4;
  node5 [label="int"];
  node4 -> node5;
  node6 [label="x"];
  node4 -> node6;
  node7 [label=";"];
  node2 -> node7;
  node8 [label="x:=10"];
  node2 -> node8;
  node9 [label="x:=10"];
  node8 -> node9;
  node10 [label="x"];
  node9 -> node10;
  node11 [label=":="];
  node9 -> node11;
  node12 [label="10"];
  node9 -> node12;
  node13 [label="10"];
  node12 -> node13;
  node14 [label="10"];
  node13 -> node14;
  node15 [label=";"];
  node2 -> node15;
  node16 [label="print(x)"];
  node2 -> node16;
  node17 [label="print(x)"];
  node16 -> node17;
  node18 [label="print"];
  node17 -> node18;
  node19 [label="("];
  node17 -> node19;
  node20 [label="x"];
  node17 -> node20;
  node21 [label="x"];
  node20 -> node21;
  node22 [label="x"];
  node21 -> node22;
  node23 [label=")"];
  node17 -> node23;
  node24 [label=";"];
  node2 -> node24;
  node25 [label="if(x>5){print(esmayorque5;}else{print(esmenoroiguala5;}for(x:=1;x<10;x:=x+1){print(x);}<missing '}'>"];
  node2 -> node25;
  node26 [label="if(x>5){print(esmayorque5;}else{print(esmenoroiguala5;}for(x:=1;x<10;x:=x+1){print(x);}<missing '}'>"];
  node25 -> node26;
  node27 [label="if"];
  node26 -> node27;
  node28 [label="("];
  node26 -> node28;
  node29 [label="x>5"];
  node26 -> node29;
  node30 [label="x"];
  node29 -> node30;
  node31 [label="x"];
  node30 -> node31;
  node32 [label="x"];
  node31 -> node32;
  node33 [label=">"];
  node29 -> node33;
  node34 [label=">"];
  node33 -> node34;
  node35 [label="5"];
  node29 -> node35;
  node36 [label="5"];
  node35 -> node36;
  node37 [label="5"];
  node36 -> node37;
  node38 [label=")"];
  node26 -> node38;
  node39 [label="{"];
  node26 -> node39;
  node40 [label="print(esmayorque5;"];
  node26 -> node40;
  node41 [label="print(esmayorque5"];
  node40 -> node41;
  node42 [label="print(esmayorque5"];
  node41 -> node42;
  node43 [label="print"];
  node42 -> node43;
  node44 [label="("];
  node42 -> node44;
  node45 [label="es"];
  node42 -> node45;
  node46 [label="es"];
  node45 -> node46;
  node47 [label="es"];
  node46 -> node47;
  node48 [label="mayor"];
  node42 -> node48;
  node49 [label="que"];
  node42 -> node49;
  node50 [label="5"];
  node42 -> node50;
  node51 [label=";"];
  node40 -> node51;
  node52 [label=""];
  node40 -> node52;
  node53 [label="}"];
  node26 -> node53;
  node54 [label="else"];
  node26 -> node54;
  node55 [label="{"];
  node26 -> node55;
  node56 [label="print(esmenoroiguala5;}for(x:=1;x<10;x:=x+1){print(x);}"];
  node26 -> node56;
  node57 [label="print(esmenoroiguala5"];
  node56 -> node57;
  node58 [label="print(esmenoroiguala5"];
  node57 -> node58;
  node59 [label="print"];
  node58 -> node59;
  node60 [label="("];
  node58 -> node60;
  node61 [label="es"];
  node58 -> node61;
  node62 [label="es"];
  node61 -> node62;
  node63 [label="es"];
  node62 -> node63;
  node64 [label="menor"];
  node58 -> node64;
  node65 [label="o"];
  node58 -> node65;
  node66 [label="igual"];
  node58 -> node66;
  node67 [label="a"];
  node58 -> node67;
  node68 [label="5"];
  node58 -> node68;
  node69 [label=";"];
  node56 -> node69;
  node70 [label="}for(x:=1;x<10;x:=x+1){print(x);}"];
  node56 -> node70;
  node71 [label="}"];
  node70 -> node71;
  node72 [label="for(x:=1;x<10;x:=x+1){print(x);}"];
  node70 -> node72;
  node73 [label="for"];
  node72 -> node73;
  node74 [label="("];
  node72 -> node74;
  node75 [label="x:=1"];
  node72 -> node75;
  node76 [label="x"];
  node75 -> node76;
  node77 [label=":="];
  node75 -> node77;
  node78 [label="1"];
  node75 -> node78;
  node79 [label="1"];
  node78 -> node79;
  node80 [label="1"];
  node79 -> node80;
  node81 [label=";"];
  node72 -> node81;
  node82 [label="x<10"];
  node72 -> node82;
  node83 [label="x"];
  node82 -> node83;
  node84 [label="x"];
  node83 -> node84;
  node85 [label="x"];
  node84 -> node85;
  node86 [label="<"];
  node82 -> node86;
  node87 [label="<"];
  node86 -> node87;
  node88 [label="10"];
  node82 -> node88;
  node89 [label="10"];
  node88 -> node89;
  node90 [label="10"];
  node89 -> node90;
  node91 [label=";"];
  node72 -> node91;
  node92 [label="x:=x+1"];
  node72 -> node92;
  node93 [label="x"];
  node92 -> node93;
  node94 [label=":="];
  node92 -> node94;
  node95 [label="x+1"];
  node92 -> node95;
  node96 [label="x"];
  node95 -> node96;
  node97 [label="x"];
  node96 -> node97;
  node98 [label="+"];
  node95 -> node98;
  node99 [label="+"];
  node98 -> node99;
  node100 [label="1"];
  node95 -> node100;
  node101 [label="1"];
  node100 -> node101;
  node102 [label=")"];
  node72 -> node102;
  node103 [label="{"];
  node72 -> node103;
  node104 [label="print(x);"];
  node72 -> node104;
  node105 [label="print(x)"];
  node104 -> node105;
  node106 [label="print(x)"];
  node105 -> node106;
  node107 [label="print"];
  node106 -> node107;
  node108 [label="("];
  node106 -> node108;
  node109 [label="x"];
  node106 -> node109;
  node110 [label="x"];
  node109 -> node110;
  node111 [label="x"];
  node110 -> node111;
  node112 [label=")"];
  node106 -> node112;
  node113 [label=";"];
  node104 -> node113;
  node114 [label=""];
  node104 -> node114;
  node115 [label="}"];
  node72 -> node115;
  node116 [label="<missing '}'>"];
  node26 -> node116;
}
